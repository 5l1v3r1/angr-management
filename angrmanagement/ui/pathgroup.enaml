from enaml.core.api import Looper
from enaml.layout.api import hbox, vbox
from enaml.widgets.api import (
    Container, DockItem, ObjectCombo, PushButton, ScrollArea
)

from .listcontrol import QtListControl

enamldef PathGroup(Container):
    attr pg
    func path_selected(p):
        pass
    func refresh():
        path_sel.items = pg.active
        path_sel.refresh_items()

    constraints = [
        # vbox(hbox(scroller)),
    ]

    QtListControl: path_sel:
        items << pg.active if pg else []
        to_string = repr

        on_selected ::
            path_selected(path_sel.selected_item)

    # ScrollArea: scroller:
    #     Container:
    #         Looper: looper:
    #             iterable << pg.active if pg else []
    #             PushButton:
    #                 text = repr(loop_item)
    #                 clicked :: path_selected(loop_item)

enamldef PathGroupItem(DockItem): pgi:
    attr path_groups
    func path_selected(p):
        pass

    title = "Path Group"

    Container:
        constraints = [
            vbox(hbox(pg_sel, new_pg), step_pg, paths),
        ]

        ObjectCombo: pg_sel:
            items << path_groups.groups
            to_string = repr

        PushButton: new_pg:
            text = 'New PG'
            clicked :: path_groups.add_path_group()

        PushButton: step_pg:
            text = 'Step PG'
            enabled << pg_sel.selected is not None
            clicked ::
                pg_sel.selected.step()
                paths.refresh()
                # pg_sel.refresh_items()

        PathGroup: paths:
            pg << pg_sel.selected
            path_selected => (p): pgi.path_selected(p)
